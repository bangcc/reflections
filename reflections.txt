How did viewing a diff between two versions of a file help you see the bug that was introduced?

What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does?

Can commit according to each logical change

Why do you think some version control systems, like Git, 
allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Different usage

How can you use the commands git log and git diff to view the history of files?

Just git log and git diff firstid secid

How might using version control make you more confident to make changes that could break something?

Can go back to the version with no problem

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When want to do experimental change but don't want to mess up with the current build

How do the diagrams help you visualize the branch structure?

Now I know which commit will appear in the log of certain branch



What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Have some conflict at first, it turns out that I need to save the changes after solving the conflict
so I can finally commit the merge


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pro: Easy
Con: Don't know what merged

Manually: Many things to check

